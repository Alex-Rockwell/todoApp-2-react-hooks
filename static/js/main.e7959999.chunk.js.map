{"version":3,"sources":["hooks/useToggle.js","hooks/useInputState.js","reducers/appReducer.js","hooks/useLocalStorageReducer.js","context/TodosContext.js","EditItemForm.js","Item.js","TodoList.js","TodoForm.js","TodoApp.js","App.js","reportWebVitals.js","index.js"],"names":["useToggle","initVal","useState","isToggled","setIsToggled","toggle","useInputState","inp","setInp","handleInpChange","e","target","value","resetInp","appReducer","state","action","type","id","uuid","text","newText","completed","filter","el","itemId","map","updText","useLocalStorageReducer","key","defaultVal","reducer","useReducer","JSON","parse","window","localStorage","getItem","String","dispatch","useEffect","setItem","stringify","defaultTodos","TodosContext","createContext","DispatchContext","TodosProvider","props","list","Provider","children","EditItemForm","useContext","style","width","marginLeft","marginRight","onSubmit","preventDefault","TextField","onChange","margin","label","fullWidth","autoFocus","Item","isEditing","toggleIsEditing","ListItem","height","Checkbox","tabIndex","checked","ListItemText","textDecoration","ListItemSecondaryAction","IconButton","onClick","TodoList","length","Paper","List","i","Divider","TodoForm","padding","TodoApp","background","elevation","AppBar","color","position","Toolbar","Typography","variant","component","sx","flexGrow","Grid","container","justifyContent","marginTop","item","xs","md","lg","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7959999.chunk.js","sourcesContent":["import {useState} from 'react'\r\n\r\nfunction useToggle(initVal = false) {\r\n  const [isToggled, setIsToggled] = useState(initVal)\r\n  const toggle = () => setIsToggled(!isToggled)\r\n  return [isToggled, toggle]\r\n}\r\n\r\nexport default useToggle","import {useState} from 'react'\r\n\r\nfunction useInputState(initVal = '') {\r\n  const [inp, setInp] = useState(initVal)\r\n  const handleInpChange = (e) => {\r\n    setInp(e.target.value)\r\n  }\r\n  const resetInp = () => {\r\n    setInp('')\r\n  }\r\n  return [inp, handleInpChange, resetInp]\r\n}\r\n\r\nexport default useInputState","import { v4 as uuid } from 'uuid';\r\n\r\n\r\nconst appReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'ADD':\r\n      return [...state, {id: uuid(), text: action.newText, completed: false}]\r\n    case 'REMOVE':\r\n      return state.filter(el => el.id !== action.itemId)\r\n    case 'TOGGLE':\r\n      return state.map(el => {\r\n        if (el.id === action.itemId) {\r\n          return {...el, completed: !el.completed}\r\n        } else {\r\n          return el\r\n        }\r\n      })\r\n    case 'EDIT':\r\n      return state.map(el => {\r\n        if (el.id === action.itemId) {\r\n          return {...el, text: action.updText}\r\n        } else {\r\n          return el\r\n        }\r\n      })\r\n    default: \r\n      return state\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default appReducer\r\n\r\n\r\n\r\n","import { useReducer, useEffect } from \"react\"\r\n\r\nfunction useLocalStorageReducer(key, defaultVal, reducer) {\r\n  const [state, dispatch] = useReducer(reducer, defaultVal, () => {\r\n    let value;\r\n    try {\r\n      value = JSON.parse(\r\n        window.localStorage.getItem(key) || String(defaultVal)\r\n      );\r\n    } catch (e) {\r\n      value = defaultVal;\r\n    }\r\n    return value;\r\n  })\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [state])\r\n\r\n  return [state, dispatch]\r\n}\r\n\r\nexport default useLocalStorageReducer","import React, { createContext, useReducer } from \"react\";\r\nimport appReducer from \"../reducers/appReducer\";\r\nimport useLocalStorageReducer from \"../hooks/useLocalStorageReducer\"\r\nconst defaultTodos = [\r\n  { id: 1, text: \"Text example N 1\", completed: false },\r\n  { id: 2, text: \"Text example N 2\", completed: false }\r\n];\r\nexport const TodosContext = createContext()\r\nexport const DispatchContext = createContext()\r\n\r\nexport function TodosProvider(props) {\r\n  // const [list, dispatch] = useReducer(appReducer, defaultTodos)\r\n  const [list, dispatch] = useLocalStorageReducer('list', defaultTodos, appReducer)\r\n  \r\n  return (\r\n    <TodosContext.Provider value={list}>\r\n      <DispatchContext.Provider value={dispatch}> \r\n        {props.children} \r\n      </DispatchContext.Provider>\r\n    </TodosContext.Provider>\r\n  );\r\n}\r\n","import React, { useContext } from 'react'\r\nimport TextField from '@mui/material/TextField';\r\nimport useInputState from './hooks/useInputState'\r\nimport { DispatchContext } from './context/TodosContext';\r\n\r\nfunction EditItemForm({id, text, toggle}) {\r\n  const [inp, handleInpChange, resetInp] = useInputState(text)\r\n  const dispatch = useContext(DispatchContext)\r\n\r\n  return (\r\n    <>\r\n      <form \r\n        style={{width: '100%', marginLeft: '12px', marginRight: '12px'}}\r\n        onSubmit={(e) => {\r\n          e.preventDefault()\r\n          dispatch({type: 'EDIT', itemId: id, updText: inp})\r\n          resetInp()\r\n          toggle()\r\n        }}\r\n      >\r\n        <TextField \r\n          value={inp} \r\n          onChange={handleInpChange}\r\n          margin='normal'\r\n          label='Edit item'\r\n          fullWidth\r\n          autoFocus\r\n        />\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EditItemForm","import ListItem from '@mui/material/ListItem';\r\nimport useToggle from './hooks/useToggle';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteSharp from '@mui/icons-material/DeleteSharp';\r\nimport EditSharp from '@mui/icons-material/EditSharp';\r\nimport ListItemSecondaryAction from '@mui/material/ListItemSecondaryAction';\r\nimport EditItemForm from './EditItemForm';\r\nimport { React, useContext } from 'react';\r\nimport { DispatchContext } from './context/TodosContext';\r\n\r\nfunction Item({id, text, completed}) {\r\n  const [isEditing, toggleIsEditing] = useToggle(false)\r\n  const dispatch = useContext(DispatchContext)\r\n  \r\n  return (\r\n    <ListItem style={{height: '65px'}}>\r\n      {\r\n      (isEditing) \r\n        ? <EditItemForm \r\n            id={id}\r\n            text={text}\r\n            toggle={toggleIsEditing}\r\n          /> \r\n        : <> <Checkbox \r\n              tabIndex={-1} \r\n              checked={completed}\r\n              onChange={() => dispatch({type: 'TOGGLE', itemId: id})}\r\n            />\r\n            <ListItemText style={{textDecoration: completed ? 'line-through' : 'none'}}>\r\n              {text}\r\n            </ListItemText>\r\n            <ListItemSecondaryAction>\r\n              <IconButton aria-label='delete' onClick={() => dispatch({type: 'REMOVE', itemId: id})}>\r\n                <DeleteSharp />\r\n              </IconButton>\r\n              <IconButton aria-label='edit' onClick={toggleIsEditing}>\r\n                <EditSharp />\r\n              </IconButton>\r\n            </ListItemSecondaryAction>\r\n          </>\r\n      }\r\n    </ListItem>\r\n  )\r\n}\r\n\r\nexport default Item","import React, { useContext } from 'react'\r\nimport Paper from '@mui/material/Paper';\r\nimport List from '@mui/material/List';\r\nimport Item from './Item';\r\nimport Divider from '@mui/material/Divider';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { TodosContext } from './context/TodosContext';\r\n\r\nfunction TodoList() {\r\n  const list = useContext(TodosContext)\r\n  if (list.length > 0)\r\n  return (\r\n    <Paper>\r\n      <List>\r\n        {list.map((el, i) => (\r\n          <div  key={uuid()}>\r\n            <Item \r\n              key={el.id}\r\n              id={el.id}\r\n              text={el.text}\r\n              completed={el.completed}\r\n            />\r\n            {i < list.length - 1 &&  <Divider/>}\r\n          </div>\r\n         )\r\n        )}\r\n      </List>\r\n    </Paper>\r\n  )\r\n  return null\r\n}\r\n\r\nexport default TodoList","import React, { useContext } from 'react'\r\nimport Paper from '@mui/material/Paper';\r\nimport TextField from '@mui/material/TextField';\r\nimport useInputState from './hooks/useInputState'\r\nimport { DispatchContext } from './context/TodosContext';\r\n\r\nfunction TodoForm() {\r\n  const [inp, handleInpChange, resetInp] = useInputState('')\r\n  const dispatch = useContext(DispatchContext)\r\n\r\n  return (\r\n    <Paper style={{margin: '1rem 0', padding: '1rem'}}>\r\n      <form\r\n        onSubmit={(e) => {\r\n          e.preventDefault()\r\n          dispatch({type: 'ADD', newText: inp})\r\n          resetInp()\r\n        }}\r\n      >\r\n        <TextField \r\n          value={inp} \r\n          onChange={handleInpChange}\r\n          margin='normal'\r\n          label='Add new item'\r\n          fullWidth  \r\n        />\r\n      </form>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default TodoForm","import React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid';\r\nimport TodoList from './TodoList';\r\nimport TodoForm from './TodoForm';\r\nimport { TodosProvider } from './context/TodosContext';\r\n\r\nfunction TodoApp() {\r\n\r\n  return (\r\n      <Paper \r\n        style={{\r\n          margin: 0, \r\n          padding: 0,\r\n          height: '100vh',\r\n          background: '#fafafa'\r\n        }}\r\n        elevation={0}\r\n      > \r\n        <AppBar color='primary' position=\"static\" height='64px'>\r\n          <Toolbar>\r\n            <Typography color=\"inherit\" variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n              Todo list with hooks\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Grid container justifyContent='center' style={{marginTop: '1rem'}}>\r\n          <Grid item xs={11} md={8} lg={4}>\r\n            <TodosProvider>\r\n              <TodoForm/>\r\n              <TodoList/>\r\n            </TodosProvider>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n  )\r\n}\r\n\r\nexport default TodoApp","import * as React from 'react';\nimport TodoApp from './TodoApp';\n\n\nfunction App() {\n  return (\n    <TodoApp />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}